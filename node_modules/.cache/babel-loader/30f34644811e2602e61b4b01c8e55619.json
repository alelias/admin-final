{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nconst axios = require(\"axios\");\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2FsZXRhIiwiYSI6ImNreGV6ZHdpbzF5Y2sycXBmb2Q4cXAwOTIifQ.n2IlnUqJNEEfDHk6qPNsoQ';\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/parque\";\nexport const useMapbox = puntoInicial => {\n  _s();\n\n  const mapaDiv = useRef();\n  const setRef = useCallback(node => {\n    mapaDiv.current = node;\n  }, []); //referencia a los marcadores\n\n  const marcadores = useRef({});\n  const [data, setData] = useState([]);\n  const mapa = useRef();\n  const [coords, setCoords] = useState(puntoInicial);\n  useEffect(() => {\n    const peticionGet = async () => {\n      await axios.get(baseUrl).then(response => {\n        setData(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    peticionGet();\n  }, []); //funcion agregar marcadores\n\n  const agregarMarcador = useCallback(ev => {\n    const {\n      lng,\n      lat\n    } = ev.lngLat;\n    const marker = new mapboxgl.Marker();\n    marker.setLngLat([lng, lat]).addTo(mapa.current).setDraggable(true); //escuchar movimientos del marcador\n\n    marker.on('dragend', ({\n      target\n    }) => {\n      const {\n        id\n      } = target;\n      const {\n        lng,\n        lat\n      } = target.getLngLat(); //emitir cambios\n\n      console.log(lng, lat);\n    });\n  }, []);\n  useEffect(() => {\n    var map = new mapboxgl.Map({\n      container: mapaDiv.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [puntoInicial.lng, puntoInicial.lat],\n      zoom: puntoInicial.zoom\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    }));\n    data.forEach(park => {\n      const marker = new mapboxgl.Marker().setLngLat([parseFloat(park.longitud), parseFloat(park.latitud)]).addTo(map);\n    });\n    mapa.current = map;\n  }, []); //cuando se mueve el mapa\n\n  useEffect(() => {\n    var _mapa$current;\n\n    (_mapa$current = mapa.current) === null || _mapa$current === void 0 ? void 0 : _mapa$current.on('move', () => {\n      const {\n        lng,\n        lat\n      } = mapa.current.getCenter();\n      setCoords({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: mapa.current.getZoom().toFixed(2)\n      });\n    });\n  }, []); //agregar marcadores\n\n  useEffect(() => {\n    var _mapa$current2;\n\n    (_mapa$current2 = mapa.current) === null || _mapa$current2 === void 0 ? void 0 : _mapa$current2.on('click', agregarMarcador);\n  }, [agregarMarcador]);\n  return {\n    coords,\n    setRef,\n    marcadores,\n    agregarMarcador\n  };\n};\n\n_s(useMapbox, \"QwUDbzlfOFiE6HTOwbd67z/B9eM=\");","map":{"version":3,"sources":["/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/hooks/useMapbox.js"],"names":["useRef","useState","useEffect","useCallback","mapboxgl","MapboxGeocoder","axios","require","accessToken","baseUrl","useMapbox","puntoInicial","mapaDiv","setRef","node","current","marcadores","data","setData","mapa","coords","setCoords","peticionGet","get","then","response","catch","error","console","log","agregarMarcador","ev","lng","lat","lngLat","marker","Marker","setLngLat","addTo","setDraggable","on","target","id","getLngLat","map","Map","container","style","center","zoom","addControl","NavigationControl","forEach","park","parseFloat","longitud","latitud","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import {useRef,useState, useEffect, useCallback}  from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nconst axios = require(\"axios\");\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2FsZXRhIiwiYSI6ImNreGV6ZHdpbzF5Y2sycXBmb2Q4cXAwOTIifQ.n2IlnUqJNEEfDHk6qPNsoQ';\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/parque\";\n\n\nexport const useMapbox = (puntoInicial) => {\n    \n    const mapaDiv = useRef()\n    const setRef = useCallback((node) => {\n            mapaDiv.current = node;\n    },[])\n\n    //referencia a los marcadores\n    const marcadores = useRef({});\n\n    const [data, setData] = useState([]);\n  \n\n    const mapa = useRef()\n    const [coords, setCoords] = useState(puntoInicial)\n\n  \n\n      useEffect(() => {\n        const peticionGet = async () => {\n    \n            await axios.get(baseUrl)\n              .then((response) => {\n              \n                setData(response.data);\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          };\n        peticionGet();\n      }, []);\n      \n\n    //funcion agregar marcadores\n    const agregarMarcador = useCallback((ev) => {\n        const {lng, lat} = ev.lngLat;\n            const marker = new mapboxgl.Marker();\n            \n\n            marker\n            .setLngLat([lng, lat])\n            .addTo(mapa.current)\n            .setDraggable(true)\n\n         \n\n            //escuchar movimientos del marcador\n            marker.on('dragend', ({target}) => {\n                const {id} = target;\n                const {lng, lat} = target.getLngLat();\n                //emitir cambios\n                console.log(lng, lat)\n                \n            })\n    },[])\n\n    useEffect(() => {\n        var map = new mapboxgl.Map({\n            container: mapaDiv.current,\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: [puntoInicial.lng, puntoInicial.lat],\n            zoom: puntoInicial.zoom\n        });\n        map.addControl(new mapboxgl.NavigationControl());\n        \n        map.addControl(\n            new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken,\n            mapboxgl: mapboxgl\n            })\n        );\n\n        data.forEach((park) => {\n            const marker = new mapboxgl.Marker()\n        .setLngLat([parseFloat(park.longitud),parseFloat(park.latitud)])\n        .addTo(map);\n        })\n        \n\n        mapa.current = map;\n    },[])\n\n    //cuando se mueve el mapa\n    useEffect(() => {\n        mapa.current?.on('move', () => {\n            const {lng, lat} = mapa.current.getCenter();\n            setCoords({\n                lng: lng.toFixed(4),\n                lat: lat.toFixed(4),\n                zoom: mapa.current.getZoom().toFixed(2)\n            })\n        })\n    },[])\n\n    //agregar marcadores\n    useEffect(() => {\n        mapa.current?.on('click', agregarMarcador);\n       \n    }, [agregarMarcador])\n\n    return{\n        coords,\n        setRef,\n        marcadores,\n        agregarMarcador\n    }\n}\n"]},"metadata":{},"sourceType":"module"}