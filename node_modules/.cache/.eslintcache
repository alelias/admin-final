[{"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/index.js":"1","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/App.js":"2","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/userList/UserList.js":"3","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/topbar/Topbar.js":"4","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/sidebar/Sidebar.js":"5","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/home/Home.js":"6","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/featuredInfo/FeaturedInfo.js":"7","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetLg/WidgetLg.js":"8","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/chart/Chart.js":"9","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dificultList/DificultList.js":"10","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/newList/NewList.js":"11","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/routineList/RoutineList.js":"12","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/eventList/EventList.js":"13","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/parkList/ParkList.js":"14","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/profileList/ProfileList.js":"15","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/exerciceList/ExerciceList.js":"16","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/login/Login.js":"17","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dashboard/Dashboard.js":"18","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetRg/WidgetRg.js":"19","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/hooks/useMapbox.js":"20","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/index.js":"21","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/App.js":"22","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/dashboard/Dashboard.js":"23","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/login/Login.js":"24","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/home/Home.js":"25","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/newList/NewList.js":"26","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/routineList/RoutineList.js":"27","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/dificultList/DificultList.js":"28","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/userList/UserList.js":"29","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/profileList/ProfileList.js":"30","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/exerciceList/ExerciceList.js":"31","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/eventList/EventList.js":"32","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/sidebar/Sidebar.js":"33","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/topbar/Topbar.js":"34","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/parkList/ParkList.js":"35","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/featuredInfo/FeaturedInfo.js":"36","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/widgetRg/WidgetRg.js":"37","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/widgetLg/WidgetLg.js":"38","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/hooks/useMapbox.js":"39"},{"size":156,"mtime":1627925011874,"results":"40","hashOfConfig":"41"},{"size":499,"mtime":1640806609682,"results":"42","hashOfConfig":"41"},{"size":7643,"mtime":1640015349138,"results":"43","hashOfConfig":"41"},{"size":830,"mtime":1640018030770,"results":"44","hashOfConfig":"41"},{"size":2946,"mtime":1639794993721,"results":"45","hashOfConfig":"41"},{"size":489,"mtime":1649795913070,"results":"46","hashOfConfig":"41"},{"size":3023,"mtime":1639714404694,"results":"47","hashOfConfig":"41"},{"size":1457,"mtime":1649794609518,"results":"48","hashOfConfig":"41"},{"size":787,"mtime":1628204107954,"results":"49","hashOfConfig":"41"},{"size":5484,"mtime":1639433695983,"results":"50","hashOfConfig":"41"},{"size":5952,"mtime":1640007661633,"results":"51","hashOfConfig":"41"},{"size":8241,"mtime":1640797504457,"results":"52","hashOfConfig":"41"},{"size":7066,"mtime":1640231545099,"results":"53","hashOfConfig":"41"},{"size":6816,"mtime":1640821299729,"results":"54","hashOfConfig":"41"},{"size":5111,"mtime":1639018371472,"results":"55","hashOfConfig":"41"},{"size":8358,"mtime":1640798166182,"results":"56","hashOfConfig":"41"},{"size":2098,"mtime":1649795989611,"results":"57","hashOfConfig":"41"},{"size":1801,"mtime":1639717940499,"results":"58","hashOfConfig":"41"},{"size":1355,"mtime":1649794607346,"results":"59","hashOfConfig":"41"},{"size":2431,"mtime":1640821376108,"results":"60","hashOfConfig":"41"},{"size":156,"mtime":1627925011874,"results":"61","hashOfConfig":"62"},{"size":499,"mtime":1640806609682,"results":"63","hashOfConfig":"62"},{"size":1801,"mtime":1639717940499,"results":"64","hashOfConfig":"62"},{"size":2098,"mtime":1649795989611,"results":"65","hashOfConfig":"62"},{"size":489,"mtime":1649795913070,"results":"66","hashOfConfig":"62"},{"size":5952,"mtime":1640007661633,"results":"67","hashOfConfig":"62"},{"size":8241,"mtime":1640797504457,"results":"68","hashOfConfig":"62"},{"size":5484,"mtime":1639433695983,"results":"69","hashOfConfig":"62"},{"size":7643,"mtime":1640015349138,"results":"70","hashOfConfig":"62"},{"size":5111,"mtime":1639018371472,"results":"71","hashOfConfig":"62"},{"size":8358,"mtime":1640798166182,"results":"72","hashOfConfig":"62"},{"size":7066,"mtime":1640231545099,"results":"73","hashOfConfig":"62"},{"size":2946,"mtime":1639794993721,"results":"74","hashOfConfig":"62"},{"size":830,"mtime":1640018030770,"results":"75","hashOfConfig":"62"},{"size":6816,"mtime":1640821299729,"results":"76","hashOfConfig":"62"},{"size":3023,"mtime":1639714404694,"results":"77","hashOfConfig":"62"},{"size":1355,"mtime":1649794607346,"results":"78","hashOfConfig":"62"},{"size":1457,"mtime":1649794609518,"results":"79","hashOfConfig":"62"},{"size":2483,"mtime":1649892345010,"results":"80","hashOfConfig":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"hd6jil",{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ojm3x",{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/index.js",[],["175","176"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/App.js",["177"],"import React from 'react';\n\nimport \"./app.css\"\nimport Dashboard from './pages/dashboard/Dashboard';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport Login from './pages/login/Login';\n\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Login />\n          </Route>\n          <Route path='/dashboard/home'>\n            <Dashboard />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/userList/UserList.js",["178","179"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./userList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { Option } = Select;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/usuario\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function UserList() {\n  const [data, setData] = useState([]);\n  const [users, setUsers] = useState({\n    idusuario: \"\",\n    nombre: \"\",\n    correo: \"\",\n    password: \"\",\n    perfil:\"\"\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUsers({ ...users, [name]: value });\n    console.log(users);\n  };\n\n  const handleSelectChange = (selected) => {\n\n    setUsers(users => (\n      { ...users, perfil : selected }\n    ));\n   \n  };\n\n  const seleccionarUsers = (users, caso) => {\n    setUsers(users);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, users)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + users.idusuario, users)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idusuario === users.idusuario) {\n            elemento.nombre = users.nombre;\n            elemento.correo = users.correo;\n            elemento.password = users.password;\n            elemento.perfil = users.perfil;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + users.idusuario)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idusuario !== users.idusuario)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Correo\",\n      dataIndex: \"correo\",\n      key: \"correo\",\n    },\n    {\n      title: \"Perfil\",\n      dataIndex: \"perfil\",\n      key: \"perfil\",\n    },\n\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarUsers(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarUsers(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"userList\">\n      <br />\n      <h1>Usuarios</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nuevo Usuario\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Usuario\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Correo\">\n            <Input name=\"correo\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Password\">\n            <Input.Password\n              name=\"password\"\n              placeholder=\"Ingresar password\"\n              iconRender={(visible) =>\n                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n              }\n              onChange={handleChange}\n            />\n          </Item>\n          <Item label=\"Perfil\">\n            <Select\n              defaultValue=\"--Seleccione--\"\n              style={{ width: 315 }}\n              name=\"perfil\"\n              onChange={handleSelectChange}\n            >\n                 <Option key=\"Admin\" value=\"Admin\">Admin</Option>\n                 <Option key=\"App\" value=\"App\">App</Option>\n        \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Usuario\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={users && users.nombre}\n            />\n          </Item>\n          <Item label=\"Correo\">\n            <Input\n              name=\"correo\"\n              onChange={handleChange}\n              value={users && users.correo}\n            />\n          </Item>\n          <Item label=\"Password\">\n            <Input.Password\n              name=\"password\"\n              placeholder=\"Ingresar password\"\n              iconRender={(visible) =>\n                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n              }\n              onChange={handleChange}\n              value={users && users.password}\n            />\n          </Item>\n          <Item label=\"Perfil\">\n            <Select\n              value={users && users.perfil}\n              style={{ width: 315 }}\n              name=\"perfil\"\n              onChange={handleSelectChange}\n            >\n               <Option key=\"Admin\" value=\"Admin\">Admin</Option>\n                 <Option key=\"App\" value=\"App\">App</Option>\n        \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar el Usuario{\" \"}\n        <b>{users && users.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/topbar/Topbar.js",["180"],"import React, {useState} from \"react\";\nimport \"./topbar.css\";\nimport { Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n//import { Link } from \"react-router-dom\";\n\nconst Topbar = () => {\n\n  let history = useHistory();\n\n  const salir = () => {\n    history.push('/');\n    window.location.reload(true);\n  }\n  \n  return (\n    <div className=\"topbar\">\n      <div className=\"topbarWrapper\">\n        <div className=\"topLeft\">\n          <span className=\"logo\">Calistenia Admin</span>\n        </div>\n\n        <div className=\"btnSalir\">\n          <Button onClick={salir} type=\"default\" shape=\"round\">\n            <LogoutOutlined />\n            Salir\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Topbar;","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/sidebar/Sidebar.js",["181","182","183"],"import React from \"react\";\nimport {\n  LineStyle,\n  Timeline,\n  FitnessCenter,\n  MenuBook,\n  Room,\n  Contacts,\n  Streetview,\n  LocalLibrary,\n  Event,\n  Face,\n} from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./sidebar.css\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Dashboard</h3>\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <Timeline className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/home\"}>\n                <span>Inicio</span>\n              </Link>\n              {/* style={{ textDecoration: 'none', color: 'white' }} */}\n            </li>\n          </ul>\n        </div>\n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem \">\n              <Room className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/parks\"}>\n                <span>Parques</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem \">\n              <FitnessCenter className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/exercices\"}>\n                <span>Ejercicios</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <MenuBook className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/routines\"}>\n                <span>Rutinas</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <LocalLibrary className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/news\"}>\n                <span>Noticas</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n        \n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem \">\n              <Event className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/events\"}>\n                <span>Eventos</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n        \n\n        <div className=\"sidebarMenu\">\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <Face className=\"sidebarIcon\" />\n              <Link className=\"link\" to={\"/dashboard/users\"}>\n                Usuarios\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/home/Home.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/featuredInfo/FeaturedInfo.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetLg/WidgetLg.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/chart/Chart.js",[],["184","185"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dificultList/DificultList.js",["186","187","188"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./dificultList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/dificultad\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function DificultList() {\n  const [data, setData] = useState([]);\n  const [dificults, setDificults] = useState({\n    iddificultad: \"\",\n    nombre: \"\",\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setDificults({ ...dificults, [name]: value });\n    console.log(dificults);\n  };\n\n  const seleccionarDificults = (dificults, caso) => {\n    setDificults(dificults);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, dificults)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + dificults.iddificultad, dificults)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.id === dificults.iddificultad) {\n            elemento.nombre = dificults.nombre;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + dificults.iddificultad)\n      .then((response) => {\n        setData(\n          data.filter(\n            (elemento) => elemento.iddificultad !== dificults.iddificultad\n          )\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      width: 280,\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarDificults(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarDificults(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"dificultList\">\n      <br />\n      <h1>Dificultades</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Dificultad\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Dificultad\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Dificultad\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Dificultad\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={dificults && dificults.nombre}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la dificultad{\" \"}\n        <b>{dificults && dificults.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/newList/NewList.js",["189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, DatePicker } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./newList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { TextArea } = Input;\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/noticia\";\n//const baseUrl = \"http://localhost:4500/api/noticia\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function NewList() {\n  const [data, setData] = useState([]);\n  const [news, setNews] = useState({\n    idnoticia: \"\",\n    titulo: \"\",\n    descripcion: \"\"\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNews({ ...news, [name]: value });\n    console.log(news);\n  };\n\n  const seleccionarNews = (news, caso) => {\n    setNews(news);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios\n      .post(baseUrl, news)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + news.idnoticia, news)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idnoticia === news.idnoticia) {\n            elemento.titulo = news.titulo;\n            elemento.descripcion = news.descripcion;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + news.idnoticia)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idnoticia !== news.idnoticia)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Titulo\",\n      dataIndex: \"titulo\",\n      key: \"titulo\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 240,\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarNews(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarNews(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"newList\">\n      <br />\n      <h1>Noticias</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Noticia\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Noticia\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Titulo\">\n            <Input name=\"titulo\" onChange={handleChange} />\n          </Item>\n  \n          <Form.Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Noticia\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Titulo\">\n            <Input\n              name=\"titulo\"\n              onChange={handleChange}\n              value={news && news.titulo}\n            />\n          </Item>\n          \n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={news && news.descripcion}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la noticia <b>{news && news.titulo}</b>\n        ?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/routineList/RoutineList.js",["193"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\n//import { EditOutlined } from \"@ant-design/icons\";\n//import { Link } from \"react-router-dom\";\nimport \"./routineList.css\";\nimport axios from \"axios\";\nconst { Item } = Form;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/rutina\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function RoutineList() {\n\n  const [data, setData] = useState([]);\n  const [routines, setRoutines] = useState({\n    idrutina: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    link: \"\",\n    iddificultad: \"\",\n    dificultade: {\n      iddificultad: \"\",\n      nombre: \"\",\n    }\n  });\n\n  const [dataDif, setDataDif] = useState([]);\n \n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = ({target}) => {\n\n    setRoutines(routines => (\n      { ...routines, [target.name] : target.value }\n    ) );\n   \n  };\n\n  const handleSelectChange = (selected) => {\n\n    setRoutines(routines => (\n      { ...routines, iddificultad : selected }\n    ));\n   \n  };\n\n  useEffect(() => {\n    const peticionGetDif = async () => {\n      const baseUrlDif = \"https://back-calistenia.herokuapp.com/api/dificultad\";\n\n      const dificults = await axios.get(baseUrlDif);\n      setDataDif(dificults.data)\n     \n    };\n    peticionGetDif()\n  }, []);\n\n  const seleccionarRoutines = (routines, caso) => {\n    setRoutines(routines);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios.get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  const peticionPost = async (e) => {\n    \n    e.preventDefault()\n    console.log(routines);\n    await axios.post(baseUrl, routines)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios.put(baseUrl + \"/\" + routines.idrutina, routines)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idrutina === routines.idrutina) {\n            elemento.nombre = routines.nombre;\n            elemento.descripcion = routines.descripcion;\n            elemento.link = routines.link;\n            elemento.iddificultad = routines.iddificultad;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios.delete(baseUrl + \"/\" + routines.idrutina)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idrutina !== routines.idrutina)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, [data]);\n\n \n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\",\n      width: 150,\n    },\n    {\n      title: \"Dificultad\",\n      dataIndex: [\"dificultade\", \"nombre\"],\n      key: \"iddificultad\",\n    },\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarRoutines(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarRoutines(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"routineList\">\n      <br />\n      <h1>Rutinas</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nueva Rutina\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Rutina\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout} >\n          <Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Link\">\n            <Input name=\"link\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Dificultad\">\n            <Select\n              defaultValue=\"--Seleccione--\"\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleSelectChange}\n            >\n              \n              {\n              dataDif.map((dificultad) =>\n              (\n                 <Option key={dificultad.iddificultad} value={dificultad.iddificultad}>{dificultad.nombre}</Option>\n              ))\n              }\n            \n           \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Rutina\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={routines && routines.nombre}\n            />\n          </Item>\n  \n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={routines && routines.descripcion}\n            />\n          </Item>\n          <Item label=\"Link\">\n            <Input\n              name=\"link\"\n              onChange={handleChange}\n              value={routines && routines.link}\n            />\n          </Item>\n          <Item label=\"Dificultad\">\n            <Select\n              defaultValue={routines && routines.dificultade.nombre}\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleSelectChange}\n            >\n               {\n              dataDif.map(dificultad =>\n              (\n                 <Option key={dificultad.iddificultad} value={dificultad.iddificultad}>{dificultad.nombre}</Option>\n              ))\n              }\n            \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la rutina{\" \"}\n        <b>{routines && routines.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/eventList/EventList.js",["194","195"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Button,\n  Modal,\n  Input,\n  Form,\n  DatePicker,\n  Select,\n} from \"antd\";\nimport 'moment/locale/es-mx';\nimport locale from 'antd/es/date-picker/locale/es_ES';\nimport moment from 'moment';\nimport \"antd/dist/antd.css\";\n\n//import { EditOutlined } from \"@ant-design/icons\";\n//import { Link } from \"react-router-dom\";\nimport \"./eventList.css\";\nconst axios = require(\"axios\");\nconst { Item } = Form;\nconst { TextArea } = Input;\n//const { Option } = Select;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/evento\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst dateFormat = 'YYYY/MM/DD';\n\nexport default function EventList() {\n  const [data, setData] = useState([]);\n  const [events, setEvents] = useState({\n    idevento: \"\",\n    nombre: \"\",\n    fecha: \"\",\n    descripcion: \"\"\n  });\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = ({target}) => {\n\n    setEvents(events => (\n      { ...events, [target.name] : target.value }\n    ) );\n   \n  };\n\n  const handleSelectChange = (date) => {\n    const fecha = date.format(dateFormat)\n    setEvents(events => (\n      { ...events, fecha : fecha }\n    ));\n    \n    \n  };\n\n  const seleccionarEvents = (events, caso) => {\n    setEvents(events);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios\n      .get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPost = async () => {\n\n    \n    await axios\n      .post(baseUrl, events)\n      .then((response) => {\n\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n      \n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + events.idevento, events)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idevento === events.idevento) {\n            elemento.nombre = events.nombre;\n            elemento.fecha = events.fecha;\n            elemento.descripcion = events.descripcion;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + events.idevento)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idevento !== events.idevento)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Fecha\",\n      dataIndex: \"fecha\",\n      key: \"fecha\",\n    },\n\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarEvents(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarEvents(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"eventList\">\n      <br />\n      <h1>Eventos</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nuevo Evento\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Evento\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Form.Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Form.Item>\n          <Form.Item label=\"Fecha\">\n          <DatePicker\n              name=\"fecha\"\n              locale={locale}\n              style={{ width: 315 }}\n              format={dateFormat}\n              defaultValue={moment('2021/12/17', dateFormat)}\n              onChange={handleSelectChange}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Form.Item>\n\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Evento\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={events && events.nombre}\n            />\n          </Item>\n          <Item label=\"Fecha\">\n            <DatePicker\n              name=\"fecha\"\n              locale={locale}\n              format={dateFormat}\n              defaultValue={moment(events && events.fecha, dateFormat)}\n              onChange={handleSelectChange}\n            />\n          </Item>\n\n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={events && events.descripcion}\n            />\n          </Item>\n  \n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar la dificultad{\" \"}\n        <b>{events && events.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/parkList/ParkList.js",["196","197","198"],"import React, { useState, useEffect } from \"react\";\n\nimport { Table, Button, Modal, Input, Form, Image } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport {useMapbox} from '../../hooks/useMapbox'\nimport \"./parkList.css\";\nconst { TextArea } = Input;\nconst axios = require(\"axios\");\nconst { Item } = Form;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/parque\";\nconst imgPunto = '../../img/pngegg.png'\n\nconst layout = {\n  labelCol: {\n    span: 8, \n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst puntoInicial = {\n  lng: -70.77501632397149,\n  lat: -33.53199106757794,\n  zoom: 15\n}\n\n\nexport default function ParkList() {\n\n  const {setRef,coords} = useMapbox(puntoInicial);\n\n  const [data, setData] = useState([]);\n  const [parks, setParks] = useState({\n    idparque: \"\",\n    nombre: \"\",\n    latitud: coords.lat,\n    longitud: coords.lng,\n    descripcion: \"\",\n  });\n\n\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  \n  const handleChange = ({target}) => {\n    \n    setParks(parks => (\n      { ...parks, [target.name] : target.value }\n    ) );\n  };\n  \n  useEffect(() => {\n    setParks((parks) => ({\n      ...parks, latitud: coords.lat, longitud: coords.lng\n    }))\n  },[coords])\n\n  const seleccionarParks = (parks, caso) => {\n    setParks(parks);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n \n\n  const peticionGet = async () => {\n    \n    await axios.get(baseUrl)\n      .then((response) => {\n      \n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const postPark = async (e) => {\n    \n  \n    await axios\n      .post(baseUrl, parks)\n      .then((response) => {\n        setData(data.concat(response.data));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n      \n  };\n\n  const peticionPut = async () => {\n    await axios\n      .put(baseUrl + \"/\" + parks.idparque, parks)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idparque === parks.idparque) {\n            elemento.nombre = parks.nombre;\n            elemento.latitud = parks.latitud;\n            elemento.longitud = parks.longitud;\n            elemento.descripcion = parks.descripcion;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios\n      .delete(baseUrl + \"/\" + parks.idparque)\n      .then((response) => {\n        setData(\n          data.filter((elemento) => elemento.idparque !== parks.idparque)\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n    {\n      title: \"Latitud\",\n      dataIndex: \"latitud\",\n      key: \"latitud\",\n    },\n    {\n      title: \"Longitud\",\n      dataIndex: \"longitud\",\n      key: \"longitud\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarParks(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarParks(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <>\n\n    <div className=\"parkList\">\n    \n      <br />\n      <h1>Parques</h1>\n    <div className=\"contenedor-mapa \">\n           \n        <div\n        ref={setRef}\n            className='mapContainer'\n        >\n \n        </div>\n        \n        <div className='form'>\n          <Form style={layout}>\n              <Item label=\"Nombre\">\n                <Input name=\"nombre\" onChange={handleChange} />\n              </Item>\n              <Item label=\"Latitud\">\n                <Input name=\"latitud\" onChange={handleChange} value={coords.lat} readOnly/>\n              </Item>\n              <Item label=\"Longitud\">\n                <Input name=\"longitud\"  onChange={handleChange} value={coords.lng} readOnly/>\n              </Item>\n\n              <Item label=\"Descripcion\">\n                <TextArea name=\"descripcion\" rows={4} onChange={handleChange} />\n              </Item>\n              <Button type=\"primary\" onClick={postPark}>\n              Insertar\n            </Button> \n          </Form>\n            \n        </div>\n            \n </div>\n      <br />\n \n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n  \n      <Modal\n        visible={modalEditar}\n        title=\"Editar Parque\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={parks && parks.nombre}\n            />\n          </Item>\n          <Item label=\"Latitud\">\n            <Input\n              name=\"latitud\"\n              onChange={handleChange}\n              value={parks && parks.latitud}\n            />\n          </Item>\n          <Item label=\"Longitud\">\n            <Input\n              name=\"longitud\"\n              onChange={handleChange}\n              value={parks && parks.longitud}\n            />\n          </Item>\n\n          <Item label=\"Descripcion\">\n            <TextArea\n              name=\"descripcion\"\n              rows={4}\n              onChange={handleChange}\n              value={parks && parks.descripcion}\n            />\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar el parque{\" \"}\n        <b>{parks && parks.nombre}</b>?\n      </Modal>\n    </div>\n    </>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/profileList/ProfileList.js",["199","200","201"],"import React,{useState, useEffect} from 'react'\nimport {Table, Button, Modal, Input, Form } from \"antd\"\nimport \"antd/dist/antd.css\";\nimport {\n    EditOutlined\n  } from '@ant-design/icons';\nimport { Link} from 'react-router-dom'\nimport './profileList.css'\nconst axios = require('axios');\nconst { Item } = Form;\n\nconst baseUrl=\"https://back-calistenia.herokuapp.com/api/perfil\";\n\nconst layout={\n    labelCol:{\n      span: 8\n    },\n    wrapperCol:{\n      span: 16\n    }\n  };\n\nexport default function ProfileList() {\n\n    const [data, setData]=useState([]);\n    const [profiles, setProfiles] = useState({\n        idperfil: '',\n        nombre: ''\n    })\n\n    const [modalInsertar, setModalInsertar]=useState(false);\n    const [modalEditar, setModalEditar]=useState(false);\n    const [modalEliminar, setModalEliminar]=useState(false);\n\n    const abrirCerrarModalInsertar=()=>{\n        setModalInsertar(!modalInsertar);\n      }\n     \n      const abrirCerrarModalEditar=()=>{\n        setModalEditar(!modalEditar);\n      }\n    \n      const abrirCerrarModalEliminar=()=>{\n        setModalEliminar(!modalEliminar);\n      }\n    \n      const handleChange=e=>{\n        const {name, value}=e.target;\n        setProfiles({...profiles,\n        [name]: value});\n        console.log(profiles);\n      }\n    \n      const seleccionarProfiles=(profiles, caso)=>{\n        setProfiles(profiles);\n        (caso===\"Editar\")?abrirCerrarModalEditar():abrirCerrarModalEliminar()\n      }\n\n      \n\n\nconst peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n      }\n    \n    \n      const peticionPost=async()=>{\n        //delete artista.id;\n        await axios.post(baseUrl, profiles)\n        .then(response=>{\n          setData(data.concat(response.data));\n          abrirCerrarModalInsertar();\n        }).catch(error=>{\n          console.log(error);\n        })\n          }\n    \n          const peticionPut=async()=>{\n            await axios.put(baseUrl+\"/\"+profiles.idperfil, profiles)\n            .then(response=>{\n              var dataAuxiliar=data;\n              dataAuxiliar.map(elemento=>{\n                if(elemento.idperfil===profiles.idperfil){\n                  elemento.nombre=profiles.nombre;\n\n                }\n              });\n              setData(dataAuxiliar);\n              abrirCerrarModalEditar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n              \n          const peticionDelete=async()=>{\n            await axios.delete(baseUrl+\"/\"+profiles.idperfil)\n            .then(response=>{\n              setData(data.filter(elemento=>elemento.idperfil!==profiles.idperfil));\n              abrirCerrarModalEliminar();\n            }).catch(error=>{\n              console.log(error);\n            })\n              }\n    \n      useEffect(()=>{\n        peticionGet();\n      },[])\nconst columns = [\n    \n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n    },\n   \n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button type=\"primary\" onClick={()=>seleccionarProfiles(fila, \"Editar\")}>Editar</Button> {\"   \"}\n          <Button type=\"primary\" danger onClick={()=>seleccionarProfiles(fila, \"Eliminar\")}>\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n    return (\n        <div className='profileList'>\n           <br />\n           <h1>Perfiles</h1>\n      <br />\n      <Button type=\"primary\" className=\"botonInsertar\" onClick={abrirCerrarModalInsertar} >Insertar Nuevo Perfil</Button>\n      <br />\n      <br />\n      <Table locale={{ emptyText: 'Cargando...' }} columns={columns} dataSource={data}/>\n\n\n      <Modal\n      visible={modalInsertar}\n      title=\"Insertar Perfil\"\n      destroyOnClose={true}\n      onCancel={abrirCerrarModalInsertar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPost}>Insertar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Nombre\">\n    <Input name=\"nombre\" onChange={handleChange}/>\n  </Item>\n\n</Form>\n      </Modal>\n\n\n      \n      <Modal\n      visible={modalEditar}\n      title=\"Editar Perfil\"\n      onCancel={abrirCerrarModalEditar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n        <Button type=\"primary\" onClick={peticionPut}>Editar</Button>,\n      ]}\n      >\n<Form {...layout}>\n  <Item label=\"Nombre\">\n    <Input name=\"nombre\" onChange={handleChange} value={profiles && profiles.nombre}/>\n  </Item>\n\n  \n</Form>\n      </Modal>\n\n\n          \n      <Modal\n      visible={modalEliminar}\n      onCancel={abrirCerrarModalEliminar}\n      centered\n      footer={[\n        <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n        <Button type=\"primary\" danger onClick={peticionDelete}>Sí</Button>,\n      ]}\n      >\nEstás seguro que deseas eliminar de el perfil <b>{profiles && profiles.nombre}</b>?\n      </Modal>\n            \n        </div>\n    )\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/exerciceList/ExerciceList.js",["202","203","204"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Modal, Input, Form, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./exerciceList.css\";\nimport axios from 'axios'\nconst { Item } = Form;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/ejercicio\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport default function ExerciceList() {\n  const [data, setData] = useState([]);\n  const [exercices, setExercices] = useState({\n    idejercicio: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    link: \"\",\n    iddificultad: \"\",\n    dificultade: {\n      iddificultad: \"\",\n      nombre: \"\",\n    },\n  });\n  const [dataDif, setDataDif] = useState([]);\n\n\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  };\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  };\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  };\n\n  const handleChange = ({target}) => {\n\n    setExercices(exercices => (\n      { ...exercices, [target.name] : target.value }\n    ) );\n   \n  };\n\n  const handleSelectChange = (selected) => {\n\n    setExercices(exercices => (\n      { ...exercices, iddificultad : selected }\n    ));\n   \n  };\n\n  const seleccionarExercices = (exercices, caso) => {\n    setExercices(exercices);\n    caso === \"Editar\" ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\n  };\n\n  const peticionGet = async () => {\n    await axios.get(baseUrl)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    const peticionGetDif = async () => {\n      const baseUrlDif = \"https://back-calistenia.herokuapp.com/api/dificultad\";\n\n      const dificults = await axios.get(baseUrlDif);\n      setDataDif(dificults.data)\n      console.log(dificults);\n    };\n    peticionGetDif()\n  }, []);\n \n\n  const peticionPost = async () => {\n    //delete artista.id;\n    await axios.post(baseUrl, exercices)\n      .then((response) => {\n        setData(data.concat(response.data));\n        abrirCerrarModalInsertar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionPut = async () => {\n    await axios.put(baseUrl + \"/\" + exercices.idejercicio, exercices)\n      .then((response) => {\n        var dataAuxiliar = data;\n        dataAuxiliar.map((elemento) => {\n          if (elemento.idejercicio === exercices.idejercicio) {\n            elemento.nombre = exercices.nombre;\n            elemento.descripcion = exercices.descripcion;\n            elemento.link = exercices.link;\n            elemento.iddificultad = exercices.iddificultad;\n          }\n        });\n        setData(dataAuxiliar);\n        abrirCerrarModalEditar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const peticionDelete = async () => {\n    await axios.delete(baseUrl + \"/\" + exercices.idejercicio)\n      .then((response) => {\n        setData(\n          data.filter(\n            (elemento) => elemento.idejercicio !== exercices.idejercicio\n          )\n        );\n        abrirCerrarModalEliminar();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    peticionGet();\n  }, [data]);\n\n\n\n  const columns = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"nombre\",\n      key: \"nombre\",\n      width: 180,\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"descripcion\",\n      key: \"descripcion\",\n      width: 280,\n    },\n\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\",\n      width: 150,\n    },\n    {\n      title: \"Dificultad\",\n      dataIndex: [\"dificultade\", \"nombre\"],\n      key: \"iddificultad\",\n    },\n\n    {\n      title: \"Acciones\",\n      key: \"acciones\",\n      render: (fila) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => seleccionarExercices(fila, \"Editar\")}\n          >\n            Editar\n          </Button>{\" \"}\n          {\"   \"}\n          <Button\n            type=\"primary\"\n            danger\n            onClick={() => seleccionarExercices(fila, \"Eliminar\")}\n          >\n            Eliminar\n          </Button>\n        </>\n      ),\n    },\n  ];\n  return (\n    <div className=\"exerciceList\">\n      <br />\n      <h1>Ejercicios</h1>\n      <br />\n      <Button\n        type=\"primary\"\n        className=\"botonInsertar\"\n        onClick={abrirCerrarModalInsertar}\n      >\n        Insertar Nuevo Ejercicio\n      </Button>\n      <br />\n      <br />\n      <Table\n        locale={{ emptyText: \"Cargando...\" }}\n        columns={columns}\n        dataSource={data}\n      />\n\n      <Modal\n        visible={modalInsertar}\n        title=\"Insertar Ejercicio\"\n        destroyOnClose={true}\n        onCancel={abrirCerrarModalInsertar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalInsertar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPost}>\n            Insertar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input name=\"nombre\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea rows={4} name=\"descripcion\" onChange={handleChange} />\n          </Item>\n          <Item label=\"Link\">\n            <Input name=\"link\" onChange={handleChange} />\n          </Item>\n\n          <Item label=\"Dificultad\">\n            <Select\n              defaultValue=\"--Seleccione--\"\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleSelectChange}\n            >\n              \n              {\n              dataDif.map((dificultad) =>\n              (\n                 <Option key={dificultad.iddificultad} value={dificultad.iddificultad}>{dificultad.nombre}</Option>\n              ))\n              }\n            \n           \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEditar}\n        title=\"Editar Dificultad\"\n        onCancel={abrirCerrarModalEditar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEditar}>Cancelar</Button>,\n          <Button type=\"primary\" onClick={peticionPut}>\n            Editar\n          </Button>,\n        ]}\n      >\n        <Form {...layout}>\n          <Item label=\"Nombre\">\n            <Input\n              name=\"nombre\"\n              onChange={handleChange}\n              value={exercices && exercices.nombre}\n            />\n          </Item>\n          <Item label=\"Descripcion\">\n            <TextArea\n              rows={4}\n              name=\"descripcion\"\n              onChange={handleChange}\n              value={exercices && exercices.descripcion}\n            />\n          </Item>\n          <Item label=\"Link\">\n            <Input\n              name=\"link\"\n              onChange={handleChange}\n              value={exercices && exercices.link}\n            />\n          </Item>\n          <Item label=\"Dificultad\">\n           \n            <Select\n              defaultValue={exercices && exercices.dificultade.nombre}\n              style={{ width: 315 }}\n              name=\"iddificultad\"\n              onChange={handleSelectChange}\n            >\n               {\n              dataDif.map(dificultad =>\n              (\n                 <Option key={dificultad.iddificultad} value={dificultad.iddificultad}>{dificultad.nombre}</Option>\n              ))\n              }\n            \n            </Select>\n          </Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={modalEliminar}\n        onCancel={abrirCerrarModalEliminar}\n        centered\n        footer={[\n          <Button onClick={abrirCerrarModalEliminar}>No</Button>,\n          <Button type=\"primary\" danger onClick={peticionDelete}>\n            Sí\n          </Button>,\n        ]}\n      >\n        Estás seguro que deseas eliminar el ejercicio{\" \"}\n        <b>{exercices && exercices.nombre}</b>?\n      </Modal>\n    </div>\n  );\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/login/Login.js",["205","206","207"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/pages/dashboard/Dashboard.js",["208"],"import React from 'react';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Topbar from '../../components/topbar/Topbar';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Home from '../../pages/home/Home';\nimport Login from '../../pages/login/Login';\nimport UserList from '../../pages/userList/UserList';\nimport DificultList from '../../pages/dificultList/DificultList';\nimport ParkList from '../../pages/parkList/ParkList';\nimport RoutineList from '../../pages/routineList/RoutineList';\nimport NewList from '../../pages/newList/NewList';\nimport ProfileList from '../../pages/profileList/ProfileList';\nimport EventList from '../../pages/eventList/EventList';\nimport ExerciceList from '../../pages/exerciceList/ExerciceList';\n\n\nfunction Dashboard() {\n  return (\n    <Router>\n      <Topbar />\n      <div className=\"container\">\n        <Sidebar />\n        <Switch>\n          \n          <Route exact path='/dashboard/home'>\n            <Home />\n          </Route>\n          <Route path='/dashboard/users'>\n            <UserList />\n          </Route>\n          <Route path='/dashboard/dificults'>\n            <DificultList />\n          </Route>\n          <Route path='/dashboard/exercices'>\n            <ExerciceList />\n          </Route>\n          <Route path='/dashboard/parks'>\n            <ParkList />\n          </Route>\n          <Route path='/dashboard/routines'>\n            <RoutineList />\n          </Route>\n          <Route path='/dashboard/news'>\n            <NewList />\n          </Route>\n          <Route path='/dashboard/events'>\n            <EventList />\n          </Route>\n          <Route path='/dashboard/profiles'>\n            <ProfileList />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Dashboard;\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/components/widgetRg/WidgetRg.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadmin/src/hooks/useMapbox.js",["209","210"],"import {useRef,useState, useEffect, useCallback}  from 'react'\nimport mapboxgl from 'mapbox-gl'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nconst axios = require(\"axios\");\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2FsZXRhIiwiYSI6ImNreGY5ZWtreTFvbnUydXE5aTF5eno4cGUifQ.tIMnTnqPoymEqgtchY33ew';\nconst baseUrl = \"https://back-calistenia.herokuapp.com/api/parque\";\n\n//const imgPunto = '../../img/pngegg.png'\n\nexport const useMapbox = (puntoInicial) => {\n    \n    const mapaDiv = useRef()\n    const setRef = useCallback((node) => {\n            mapaDiv.current = node;\n    },[])\n  \n    //referencia a los marcadores\n    const marcadores = useRef({});\n\n    const [data, setData] = useState([]);\n\n    const mapa = useRef()\n    const [coords, setCoords] = useState(puntoInicial)\n\n      useEffect(() => {\n        const peticionGet = async () => {\n    \n            await axios.get(baseUrl)\n              .then((response) => {\n              \n                setData(response.data);\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          };\n        peticionGet();\n      }, [data]);\n      \n\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            container: mapaDiv.current,\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: [puntoInicial.lng, puntoInicial.lat],\n            zoom: puntoInicial.zoom\n        });\n        map.addControl(new mapboxgl.NavigationControl());\n        \n        map.addControl(\n            new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken,\n            mapboxgl: mapboxgl\n            }) \n        );\n\n        data.forEach((park) => {\n            const marker = new mapboxgl.Marker()\n        .setLngLat([parseFloat(park.longitud),parseFloat(park.latitud)])\n        .addTo(map);\n        })\n        \n\n        mapa.current = map;\n    },[])\n\n    //cuando se mueve el mapa\n    useEffect(() => {\n        mapa.current?.on('move', () => {\n            const {lng, lat} = mapa.current.getCenter();\n            setCoords({\n                lng: lng.toFixed(6),\n                lat: lat.toFixed(6),\n                zoom: mapa.current.getZoom().toFixed(2)\n            })\n        })\n    },[])\n\n    //agregar marcadores\n    /*\n    useEffect(() => {\n        mapa.current?.on('click', agregarMarcador);\n       \n    }, [agregarMarcador])\n*/\n    return{\n        coords,\n        setRef,\n        marcadores,\n    }\n}\n","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/index.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/App.js",["211"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/dashboard/Dashboard.js",["212"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/login/Login.js",["213","214","215"],"import React, { useState, useEffect } from \"react\";\nimport {Link} from 'react-router-dom'\nimport { Button } from \"antd\";\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\nimport Swal from 'sweetalert2'\nimport './login.css'\n\nconst Login = () => {\n\n    const {push} = useHistory()\n\n    const [entrar, setEntrar] = useState({\n        correo: \"\", \n        password: \"\" \n    })\n\n    const inputChange = ({ target }) => {\n        const { name, value } = target\n        setEntrar({\n            ...entrar,\n            [name]: value\n        })\n    }\n \n\n    const login = () => {\n        \n        axios.post(\"https://back-calistenia.herokuapp.com/api/login\", entrar).then((response) => {\n       \n      \n    console.log(response)\n       if(response.status == 200){\n            push('/dashboard/home')\n  \n        }\n        \n        }).catch(({ response }) => {\n            Swal.fire(\n                'Error',\n                'Ingresar correo y contraseña validos',\n                'error'\n              )\n            console.log(response.data)\n        })\n        \n    }\n    const logo = '../../img/calisteni.jpeg'\n\n    return ( \n        <div className=\"login\">\n\n            <div className='logo'>\n                <img src={logo} alt=\"Logo\" style={{width: 200, height:200}}  />\n            </div>\n            \n            <form className=\"loginForm\">\n            <h2>Calistenia APP</h2>\n                <input \n                    type=\"text\" \n                    name=\"correo\"\n                    placeholder=\"email\" \n                    className=\"loginInput\"\n                    onChange={inputChange}    \n                />\n                <input \n                    type=\"password\" \n                    name=\"password\"\n                    placeholder=\"password\" \n                    className=\"loginInput\" \n                    onChange={inputChange} \n                />\n                \n                <Button  onClick={login} className=\"loginButton\" >Ingresar</Button>\n                {/*to={\"/dashboard/home\"} */}\n            </form>\n        </div>\n\n     );\n}\n \nexport default Login;","/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/home/Home.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/newList/NewList.js",["216","217","218","219"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/routineList/RoutineList.js",["220"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/dificultList/DificultList.js",["221","222","223"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/userList/UserList.js",["224","225"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/profileList/ProfileList.js",["226","227","228"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/exerciceList/ExerciceList.js",["229","230","231"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/eventList/EventList.js",["232","233"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/sidebar/Sidebar.js",["234","235","236"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/topbar/Topbar.js",["237"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/pages/parkList/ParkList.js",["238","239","240"],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/featuredInfo/FeaturedInfo.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/widgetRg/WidgetRg.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/components/widgetLg/WidgetLg.js",[],"/Users/alexelias/Desktop/proyectos-react/calisteniaApp/frontendadminv2/src/hooks/useMapbox.js",["241","242"],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":5,"column":49,"nodeType":"249","messageId":"250","endLine":5,"endColumn":53},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":96,"column":37,"nodeType":"253","messageId":"254","endLine":96,"endColumn":39},{"ruleId":"247","severity":1,"message":"255","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":24},{"ruleId":"247","severity":1,"message":"256","line":3,"column":3,"nodeType":"249","messageId":"250","endLine":3,"endColumn":12},{"ruleId":"247","severity":1,"message":"257","line":8,"column":3,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"258","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":13},{"ruleId":"243","replacedBy":"259"},{"ruleId":"245","replacedBy":"260"},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":84,"column":37,"nodeType":"253","messageId":"254","endLine":84,"endColumn":39},{"ruleId":"247","severity":1,"message":"262","line":2,"column":45,"nodeType":"249","messageId":"250","endLine":2,"endColumn":55},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":86,"column":37,"nodeType":"253","messageId":"254","endLine":86,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":117,"column":37,"nodeType":"253","messageId":"254","endLine":117,"endColumn":39},{"ruleId":"247","severity":1,"message":"263","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":9},{"ruleId":"251","severity":1,"message":"252","line":116,"column":37,"nodeType":"253","messageId":"254","endLine":116,"endColumn":39},{"ruleId":"247","severity":1,"message":"264","line":3,"column":45,"nodeType":"249","messageId":"250","endLine":3,"endColumn":50},{"ruleId":"247","severity":1,"message":"265","line":13,"column":7,"nodeType":"249","messageId":"250","endLine":13,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":109,"column":37,"nodeType":"253","messageId":"254","endLine":109,"endColumn":39},{"ruleId":"247","severity":1,"message":"261","line":5,"column":5,"nodeType":"249","messageId":"250","endLine":5,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":7,"column":10,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":87,"column":40,"nodeType":"253","messageId":"254","endLine":87,"endColumn":42},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":114,"column":37,"nodeType":"253","messageId":"254","endLine":114,"endColumn":39},{"ruleId":"247","severity":1,"message":"266","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":33,"column":27,"nodeType":"269","messageId":"270","endLine":33,"endColumn":29},{"ruleId":"247","severity":1,"message":"271","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":13},{"ruleId":"247","severity":1,"message":"272","line":60,"column":19,"nodeType":"249","messageId":"250","endLine":60,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":67,"column":7,"nodeType":"275","endLine":67,"endColumn":9,"suggestions":"276"},{"ruleId":"247","severity":1,"message":"248","line":5,"column":49,"nodeType":"249","messageId":"250","endLine":5,"endColumn":53},{"ruleId":"247","severity":1,"message":"271","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":13},{"ruleId":"247","severity":1,"message":"266","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":33,"column":27,"nodeType":"269","messageId":"270","endLine":33,"endColumn":29},{"ruleId":"247","severity":1,"message":"262","line":2,"column":45,"nodeType":"249","messageId":"250","endLine":2,"endColumn":55},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":86,"column":37,"nodeType":"253","messageId":"254","endLine":86,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":117,"column":37,"nodeType":"253","messageId":"254","endLine":117,"endColumn":39},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":84,"column":37,"nodeType":"253","messageId":"254","endLine":84,"endColumn":39},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":96,"column":37,"nodeType":"253","messageId":"254","endLine":96,"endColumn":39},{"ruleId":"247","severity":1,"message":"261","line":5,"column":5,"nodeType":"249","messageId":"250","endLine":5,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":7,"column":10,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":87,"column":40,"nodeType":"253","messageId":"254","endLine":87,"endColumn":42},{"ruleId":"247","severity":1,"message":"261","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":114,"column":37,"nodeType":"253","messageId":"254","endLine":114,"endColumn":39},{"ruleId":"247","severity":1,"message":"263","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":9},{"ruleId":"251","severity":1,"message":"252","line":116,"column":37,"nodeType":"253","messageId":"254","endLine":116,"endColumn":39},{"ruleId":"247","severity":1,"message":"256","line":3,"column":3,"nodeType":"249","messageId":"250","endLine":3,"endColumn":12},{"ruleId":"247","severity":1,"message":"257","line":8,"column":3,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"258","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":13},{"ruleId":"247","severity":1,"message":"255","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":24},{"ruleId":"247","severity":1,"message":"264","line":3,"column":45,"nodeType":"249","messageId":"250","endLine":3,"endColumn":50},{"ruleId":"247","severity":1,"message":"265","line":13,"column":7,"nodeType":"249","messageId":"250","endLine":13,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":109,"column":37,"nodeType":"253","messageId":"254","endLine":109,"endColumn":39},{"ruleId":"247","severity":1,"message":"272","line":62,"column":19,"nodeType":"249","messageId":"250","endLine":62,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":69,"column":7,"nodeType":"275","endLine":69,"endColumn":9,"suggestions":"277"},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'LineStyle' is defined but never used.","'Contacts' is defined but never used.","'Streetview' is defined but never used.",["278"],["279"],"'EditOutlined' is defined but never used.","'DatePicker' is defined but never used.","'Select' is defined but never used.","'Image' is defined but never used.","'imgPunto' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Login' is defined but never used.","'marker' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data', 'puntoInicial.lat', 'puntoInicial.lng', and 'puntoInicial.zoom'. Either include them or remove the dependency array.","ArrayExpression",["280"],["281"],"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},"Update the dependencies array to be: [data, puntoInicial.lat, puntoInicial.lng, puntoInicial.zoom]",{"range":"285","text":"286"},{"range":"287","text":"286"},[1870,1872],"[data, puntoInicial.lat, puntoInicial.lng, puntoInicial.zoom]",[1922,1924]]